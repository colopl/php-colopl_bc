name: CI
on: [push, pull_request]
jobs:
  Library:
    runs-on: ubuntu-22.04
    timeout-minutes: 60
    strategy:
      matrix:
        version: ["7.4", "8.0", "8.1", "8.2"]
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Buildx
        uses: docker/setup-buildx-action@v2
      - name: Cache
        uses: actions/cache@v3
        with:
          path: ./vendor
          key: library-composer-${{ hashFiles('composer.lock') }}
          restore-keys: library-composer-${{ hashFiles('composer.lock') }}
      - name: Build Container
        uses: docker/build-push-action@v4
        with:
          build-args: |
            IMAGE=php
            TAG=${{ matrix.version }}-cli
          cache-from: type=gha
          cache-to: type=gha,mode=max
          context: .
          file: ./build/library/Dockerfile
          load: true
          tags: "library-docker-${{ matrix.version }}"
      - name: Test Library
        run: docker run --rm -v"$(pwd):/workspace:cached" -i library-docker-${{ matrix.version }}
  Extension:
    runs-on: ubuntu-22.04
    timeout-minutes: 60
    strategy:
      matrix:
        arch: ["amd64", "arm64v8", "s390x"]
        version: ["8.0", "8.1", "8.2"]
        type: ["cli", "zts"]
        distro: ["bullseye", "alpine"]
    steps:
        - name: Checkout
          uses: actions/checkout@v3
        - name: Setup QEMU
          uses: docker/setup-qemu-action@v2
          with:
            platforms: "arm64,s390x"
        - name: Setup Buildx
          uses: docker/setup-buildx-action@v2
        - name: Build Container
          uses: docker/build-push-action@v4
          with:
            build-args: |
              IMAGE=${{ matrix.arch }}/php
              TAG=${{ matrix.version }}-${{ matrix.type }}-${{ matrix.distro }}
              PSKEL_SKIP_DEBUG=${{ matrix.arch != 'amd64' && '1' || '' }}
            cache-from: type=gha
            cache-to: type=gha,mode=max
            context: .
            load: true
            tags: "pskel-${{ matrix.arch }}-${{ matrix.type }}-${{ matrix.distro }}"
        - name: Test Extension
          run: |
            docker run --env TEST_EXTENSION=1 --rm -i pskel-${{ matrix.arch }}-${{ matrix.type }}-${{ matrix.distro }}
        - name: Test Extension with Valgrind
          if: matrix.arch == 'amd64'
          run: |
            docker run --env TEST_EXTENSION_VALGRIND=1 --rm -i pskel-${{ matrix.arch }}-${{ matrix.type }}-${{ matrix.distro }}
        - name: Test Extension with MSAN
          if: matrix.arch == 'amd64' && matrix.distro != 'alpine'
          run: |
            docker run --env TEST_EXTENSION_MSAN=1 --rm -i pskel-${{ matrix.arch }}-${{ matrix.type }}-${{ matrix.distro }}
