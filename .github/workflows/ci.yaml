name: CI
on:
  push:
    branches:
        - main
  pull_request:
  workflow_dispatch:
permissions:
  contents: write
  pull-requests: write
jobs:
  LinuxNative:
    strategy:
      matrix:
        runs-on: ['ubuntu-24.04', 'ubuntu-24.04-arm']
        version: ['8.1', '8.2', '8.3', '8.4']
        type: ['cli', 'zts']
        distro: ['trixie', 'alpine']
    runs-on: ${{ matrix.runs-on }}
    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          submodules: true
      - name: Build container
        run: docker compose build --pull --no-cache --build-arg IMAGE="php" --build-arg TAG="${{ matrix.version }}-${{ matrix.type }}-${{ matrix.distro }}"
      - name: Test extension with Bundled PHP + library_test
        run: docker compose run --rm shell library_test
      - name: Test extension with PHP Debug Build
        if: matrix.version != '8.1'
        run: docker compose run --rm shell pskel test debug
      - name: Test extension with Valgrind
        if: matrix.version != '8.1'
        run: docker compose run --rm shell pskel test valgrind
      - name: Test extension with LLVM Sanitizer (MemorySanitizer)
        if: matrix.distro != 'alpine' && matrix.version != '8.1'
        run: docker compose run --rm shell pskel test msan
      - name: Test extension with LLVM Sanitizer (AddressSanitizer)
        if: matrix.distro != 'alpine' && matrix.version != '8.1'
        run: docker compose run --rm shell pskel test asan
      - name: Test extension with LLVM Sanitizer (UndefinedBehaviorSanitizer)
        if: matrix.distro != 'alpine' && matrix.version != '8.1'
        run: docker compose run --rm shell pskel test ubsan
  LinuxQemu:
    runs-on: ubuntu-24.04
    strategy:
      matrix:
        platform: ['linux/s390x']
        version: ['8.1', '8.2', '8.3', '8.4']
        type: ['cli', 'zts']
        distro: ['trixie', 'alpine']
    steps:
        - name: Checkout
          uses: actions/checkout@v5
          with:
            submodules: true
        - name: Setup QEMU
          uses: docker/setup-qemu-action@v3
          with:
            platforms: "s390x"
            cache-image: false
        - name: Setup buildx
          uses: docker/setup-buildx-action@v3
        - name: Build container
          run: |
            docker compose build --pull --no-cache --build-arg PLATFORM="${{ matrix.platform }}" --build-arg IMAGE="php" --build-arg TAG="${{ matrix.version }}-${{ matrix.type }}-${{ matrix.distro }}"
        - name: Test extension with bundled PHP
          run: |
            docker compose run --rm shell library_test
