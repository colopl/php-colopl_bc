name: CI
on: [push, pull_request]
jobs:
  Library:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Install Extension
        run: |
          cd ext/
          phpize
          ./configure
          make -j$(nproc)
          make test
          sudo make install
          echo "extension=colopl_bc" | sudo tee "$(php-config --ini-dir)/10-colopl_bc.ini"
          php --re "colopl_bc"
      - name: Get Composer Cache Directory
        id: composer-cache
        run: |
          echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT
      - uses: actions/cache@v3
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-
      - name: Composer Install
        run: composer install --prefer-dist
      - name: Test Library
        run: composer exec -- phpunit --config="phpunit.xml"
      - name: Analyse PHPStan
        run: composer exec -- phpstan analyse --memory-limit=-1 --configuration="phpstan.neon"
      - name: Analyse Psalm
        run: composer exec -- psalm --memory-limit=-1 --config="psalm.xml"
  Extension:
    runs-on: ubuntu-22.04
    timeout-minutes: 60
    strategy:
      matrix:
        arch: ["amd64", "arm64v8"]
        version: ["8.0", "8.1"]
        type: ["cli", "zts"]
        distro: ["bullseye", "alpine"]
    steps:
        - name: Checkout
          uses: actions/checkout@v3
        - name: Setup QEMU
          uses: docker/setup-qemu-action@v2
          with:
            platforms: "arm64,s390x"
        - name: Setup buildx
          uses: docker/setup-buildx-action@v2
        - name: Build Container
          uses: docker/build-push-action@v4
          with:
            build-args: |
              IMAGE=${{ matrix.arch }}/php
              TAG=${{ matrix.version }}-${{ matrix.type }}-${{ matrix.distro }}
              PSKEL_SKIP_DEBUG=${{ matrix.arch != 'amd64' && '1' || '' }}
            cache-from: type=gha
            cache-to: type=gha,mode=max
            context: .
            load: true
            tags: "pskel-${{ matrix.arch }}-${{ matrix.type }}-${{ matrix.distro }}"
        - name: Test Extension
          run: |
            docker run --env TEST_EXTENSION=1 --rm -i pskel-${{ matrix.arch }}-${{ matrix.type }}-${{ matrix.distro }}
        - name: Test Extension with Valgrind
          if: matrix.arch == 'amd64'
          run: |
            docker run --env TEST_EXTENSION_VALGRIND=1 --rm -i pskel-${{ matrix.arch }}-${{ matrix.type }}-${{ matrix.distro }}
        - name: Test Extension with MSAN
          if: matrix.arch == 'amd64' && matrix.distro != 'alpine'
          run: |
            docker run --env TEST_EXTENSION_MSAN=1 --rm -i pskel-${{ matrix.arch }}-${{ matrix.type }}-${{ matrix.distro }}
